name: CI/CD Pipeline for Nginx Application

on:
  push:
    branches:
      - main

jobs:

  build_and_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t my-nginx-app .

      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@v0.0.10
        with:
          image: my-nginx-app
        continue-on-error: true  # Allow pipeline to continue even if vulnerabilities are found

      - name: Notify Slack on Build Success
        if: success()
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          text: "CI/CD pipeline succeeded! Nginx application Docker image built and security scan completed successfully."

      - name: Notify Slack on Build Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          text: "CI/CD pipeline failed during the build or scan phase. Please check the logs for more details."

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_scan

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Set image tag for deployment
        run: |
          kubectl set image deployment/my-nginx-deployment my-nginx-container=my-nginx-app:latest

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Verify Kubernetes deployment
        run: |
          kubectl rollout status deployment/my-nginx-deployment

      - name: Notify Slack on Deploy Success
        if: success()
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          text: "Deployment to Kubernetes succeeded! The Nginx application is live."

      - name: Notify Slack on Deploy Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          text: "Deployment to Kubernetes failed. Please check the logs for more details."
